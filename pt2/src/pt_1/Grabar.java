package pt_1;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ale
 */

import SoundApi.JavaSound;
import java.awt.*;
import java.awt.event.*;
import java.awt.geom.Line2D;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import java.util.Vector;
import java.util.Enumeration;
import java.io.*;
import javax.sound.sampled.*;
import java.awt.font.*;
import java.text.*;

public class Grabar extends javax.swing.JFrame {

    /**
     * Creates new form Grabar
     */
    
    
     final int bufSize = 16384;

     File soundFile;
     AudioInputStream audioStream;
     AudioFormat audioFormat;
     SourceDataLine sourceLine;
 String name_prueba;
     AudioManager audioManager= new AudioManager();
     
      AudioInputStream audioInputStream;
  String fileName = "untitled";
    String errStr;
    double duration, seconds;
    File file;
    Vector lines = new Vector();
    
    public Grabar() {
        initComponents();
    }
    
    
 
     
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Grabar = new javax.swing.JButton();
        ejemplo = new javax.swing.JButton();
        play = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Grabar.setText("Grabar");
        Grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrabarActionPerformed(evt);
            }
        });

        ejemplo.setText("Escuchar Ejemplo");
        ejemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejemploActionPerformed(evt);
            }
        });

        play.setText("Reproducir");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ejemplo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(play)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(ejemplo)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Grabar)
                    .addComponent(play))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void ejemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejemploActionPerformed
        // TODO add your handling code here:
        
    String strFilename = "salvar.wav";
                    audioManager.Reproducir(strFilename);


    }//GEN-LAST:event_ejemploActionPerformed

    private void GrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrabarActionPerformed
         if (Grabar.getText().startsWith("Grabar")) {
                file = null;
                
                audioManager.Grabar(true);
             //   fileName = "untitled";
                //samplingGraph.start();
                //loadB.setEnabled(false);
                play.setEnabled(false);
            
                Grabar.setText("Detener");
            } else {
                lines.removeAllElements();  
                audioManager.Grabar(false);
                //audioInputStream = audioManager.getAudio();
                name_prueba = audioManager.Getname();
               // samplingGraph.stop();
                //loadB.setEnabled(true);
                play.setEnabled(true);
                Grabar.setText("Grabar");
            }
        
    }//GEN-LAST:event_GrabarActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed

        // TODO add your handling code here:
                if (play.getText().startsWith("Reproducir")) {
                     Grabar.setEnabled(false);
                audioManager.Reproducir(name_prueba);
                                Grabar.setEnabled(true);

               // samplingGraph.start();
               
              //  play.setText("Reproducir");
            } else {
                //playback.stop();
                //samplingGraph.stop();
                play.setText("Reproducir");
            }
    }//GEN-LAST:event_playActionPerformed

    
    
 

    
    



    private void reportStatus(String msg) {
        if ((errStr = msg) != null) {
            System.out.println(errStr);
          //  samplingGraph.repaint();
        }
    }


    /**
     * Write data to the OutputChannel.
     */

        

    /** 
     * Reads data from the input channel and writes to the output stream
     */
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    
    
    
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grabar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grabar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grabar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grabar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grabar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Grabar;
    private javax.swing.JButton ejemplo;
    private javax.swing.JButton play;
    // End of variables declaration//GEN-END:variables
}
